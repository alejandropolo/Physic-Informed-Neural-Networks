equation:
  equation: 'u_t - ( K_H - K_Q * u ) / K_th'
  params_to_optimize: []
  func_to_optimize: False
  hidden_layers: [300, 100] # for func_to_optimize = True
  data_from_csv: '' # path to csv file
  constant_values: {
    'K_H': 2,
    'K_Q': 2,
    'K_th': 0.5,
  }
  f: ''
  initial_conditions: {
    'u_0': 2,
  }


data_load:
  t_0: 0
  t_fin: 1
  n_points: 6
  noise: 0.0

model_architecture:
  layers: [10]
  activations: "sigmoid"
  
training:
  lr: 0.01  ## Learning rate
  lambda_pin: 1  ## Lambda for the physics loss
  lambda_ic: 1  ## Lambda for the physics loss
  lambda_bc: 1  ## Lambda for the physics loss
  n_epochs: 500  ## Number of epochs
  optimizer: "lbfgs"  ## Optimizer